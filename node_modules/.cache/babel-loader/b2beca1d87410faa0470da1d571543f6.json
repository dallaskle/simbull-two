{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Dallas\\\\Desktop\\\\simbull-two\\\\src\\\\components\\\\Functionality\\\\SellShare.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './functions.css';\nimport { Link } from 'react-router-dom';\nimport { db } from '../../services/firebase';\nimport firebase from 'firebase';\nimport moment from 'moment';\n\nconst SellShare = props => {\n  _s();\n\n  //props\n  const shares = props.shares;\n  const team = props.team;\n  const user = props.user;\n  const closeSell = props.closeSell; //states\n\n  const [calc, setCalc] = useState('');\n  let totalCost = 0;\n  let shareCost = 0;\n  let tradingCost = 0;\n  let newHighestBidPrice = 0;\n  const [sharesToSell, setSharesToSell] = useState([]);\n  const [sellShares, setSellShares] = useState();\n\n  const handleSellShares = e => {\n    setSellShares(e.target.value);\n  };\n\n  const [bidsArr, setBidsArr] = useState([]);\n  useEffect(() => {\n    getBids();\n  }, [props.bidsArr]);\n  const [amountSharesToSell, setAmountSharesToSell] = useState(0); //Functionality\n  //calc add digit\n\n  const addDigit = x => {\n    let hold = calc;\n    let thisNum = hold.concat(x);\n    setSellShares(parseFloat(thisNum));\n    setCalc(thisNum);\n  };\n\n  const deleteDigit = () => {\n    const editedText = calc.slice(0, -1);\n    let thisNum = parseFloat(editedText);\n    setSellShares(thisNum);\n    setCalc(editedText);\n  };\n\n  function getBids() {\n    if (props.bidsArr) {\n      const bidOwners = [];\n      const bidOwnersBidsAmt = {};\n      const ownersCashAmt = {}; //get bid owners and thier total bid amount\n\n      props.bidsArr.map(b => {\n        if (user.email !== b.bidOwner) {\n          if (bidOwnersBidsAmt[b.bidOwner]) {\n            bidOwnersBidsAmt[b.bidOwner] = bidOwnersBidsAmt[b.bidOwner] + b.bidPrice;\n          } else {\n            bidOwnersBidsAmt[b.bidOwner] = b.bidPrice;\n            bidOwners.push(b.bidOwner);\n            console.log(b.bidOwner);\n          }\n        }\n      });\n      console.log(bidOwners);\n      console.log(bidOwnersBidsAmt); //get bid owners total cash\n\n      db.collection('Users').get().then(snapshot => {\n        snapshot.forEach(doc => {\n          const data = doc.data();\n          console.log(bidOwners);\n\n          if (bidOwners.includes(data.email.toString())) {\n            console.log('here');\n            console.log(ownersCashAmt);\n\n            if (!ownersCashAmt[data.email]) {\n              ownersCashAmt[data.email] = data.cash;\n            }\n          }\n\n          console.log(data.email);\n          console.log(ownersCashAmt[data.email]);\n          console.log(ownersCashAmt[data.cash]);\n        }, error => {\n          console.log(error);\n        });\n        console.log('there');\n        console.log(ownersCashAmt);\n        return ownersCashAmt;\n      }).then(result => {\n        //eliminating users from bidOwners Array if they don't have enough cash to cover their bids \n        bidOwners.map(o => {\n          if (bidOwnersBidsAmt[o] > ownersCashAmt[o]) {\n            let ind = bidOwners.indexOf(o);\n            bidOwners.splice(ind, 1);\n          }\n        });\n        return bidOwners;\n      }).then(result => {\n        //repopulating the bids array with bids only from users with enough cash\n        const bids1 = [];\n        props.bidsArr.map(b => {\n          if (bidOwners.includes(b.bidOwner)) {\n            bids1.push(b);\n          }\n        });\n        console.log(bids1);\n        setBidsArr(bids1);\n      });\n    }\n  }\n\n  const getTotalCost = () => {\n    totalCost = 0;\n    shareCost = 0;\n\n    if (bidsArr.length > 0 & bidsArr.length >= sellShares) {\n      for (let i = 0; i < sellShares; i++) {\n        let holder = shareCost + bidsArr[i].bidPrice;\n        shareCost = holder;\n      }\n\n      if (!user.subscription) {\n        tradingCost = 1;\n      }\n\n      totalCost = shareCost - tradingCost;\n    }\n  };\n\n  useEffect(() => {\n    getTotalCost();\n  }, [sellShares]);\n\n  const getSharesToSell = () => {\n    const sharesToSell1 = [];\n    user.shares.map(s => {\n      if (s.substring(0, s.length - 4) == team.team) {\n        sharesToSell1.push(s);\n      }\n    });\n    setSharesToSell(sharesToSell1);\n  };\n\n  useEffect(() => {\n    getSharesToSell();\n  }, [props.bidsArr]);\n\n  const submitSell = () => {\n    let sellSharesInt = parseInt(sellShares);\n\n    if (sellShares == sellSharesInt) {\n      if (amountSharesToSell < sellShares) {\n        alert(`You don't own enough shares. You only own ${amountSharesToSell} shares.`);\n      } else {\n        if (bidsArr.length >= sellShares & sellShares != 0) {\n          let answer = window.confirm(`Sell ${sellShares} shares for $${shareCost / sellShares} per share, for a total of $${totalCost}? ${!user.subscription ? `Includes a trading fee of $${tradingCost.toFixed(2)}.` : ''}`);\n\n          if (answer) {\n            uploadByBid();\n          }\n        } else {\n          alert(`There are not enough open bids to fill your order. Please try a smaller order or make an offer to sell. There are only ${bidsArr.length} available. `);\n        }\n      }\n    } else {\n      alert(`Sorry we don't do fractional trading. Please try again with a whole number.`);\n    }\n  };\n\n  const checkForShares = () => {\n    let sharesOwned = 0;\n    user.shares.map(s => {\n      let newS = s.substring(0, s.length - 4);\n\n      if (newS == team.team) {\n        sharesOwned++;\n      }\n    });\n    setAmountSharesToSell(sharesOwned);\n  };\n\n  useEffect(() => {\n    checkForShares();\n  }, [props.user]);\n\n  async function uploadByBid() {\n    let transactionNum = `000000000000${(Math.random() * 100000000000).toFixed(0)}`;\n    let transactionID = transactionNum.substring(transactionNum.length - 10, transactionNum.length);\n    var batch = db.batch();\n\n    for (let i = 0; i < sellShares; i++) {\n      if (!bidsArr[i].subscription) {\n        let num = bidsArr[i].bidNum;\n\n        if (num == 0) {\n          let thisRef7 = db.collection('Users').doc(bidsArr[i].bidOwner);\n          batch.update(thisRef7, {\n            cash: firebase.firestore.FieldValue.increment(-tradingCost)\n          });\n        }\n      }\n\n      let thisRef1 = db.collection('Shares').doc(sharesToSell[i]);\n      batch.update(thisRef1, {\n        currentAsk: null,\n        lastSoldPrice: bidsArr[i].bidPrice,\n        owner: bidsArr[i].bidOwner,\n        onTradingBlock: false,\n        totalPayouts: 0\n      });\n      let thisRef2 = db.collection('Users').doc(bidsArr[i].bidOwner);\n      batch.update(thisRef2, {\n        cash: firebase.firestore.FieldValue.increment(-bidsArr[i].bidPrice),\n        shares: firebase.firestore.FieldValue.arrayUnion(sharesToSell[i])\n      });\n      let thisRef3 = db.collection('Users').doc(user.email);\n      batch.update(thisRef3, {\n        shares: firebase.firestore.FieldValue.arrayRemove(sharesToSell[i])\n      });\n      let thisRef4 = db.collection('Bids').doc(`${bidsArr[i].bidTeam}-${bidsArr[i].bidOwner}-$${bidsArr[i].bidPrice}-${bidsArr[i].bidNum}`);\n      batch.delete(thisRef4);\n      let newYearHigh = team.yearHigh > bidsArr[i].bidPrice ? team.yearHigh : bidsArr[i].bidPrice;\n      let newYearLow = team.yearLow < bidsArr[i].bidPrice ? team.yearLow : bidsArr[i].bidPrice;\n      let thisRef5 = db.collection('Teams').doc(team.team);\n      batch.update(thisRef5, {\n        bidsAvailable: firebase.firestore.FieldValue.increment(-1),\n        totalBidPrice: firebase.firestore.FieldValue.increment(parseFloat(-bidsArr[i].bidPrice)),\n        lastSoldPrice: bidsArr[i].bidPrice,\n        yearHigh: newYearHigh,\n        yearLow: newYearLow\n      });\n      let date = moment().format('YYYYMMDD');\n      let thisRef8 = db.collection('Transactions').doc(`${date}-${sharesToSell[i]}-seller:${user.email}-buyer:${user.email}-price:${bidsArr[i].bidPrice}`);\n      batch.set(thisRef8, {\n        seller: user.email,\n        buyer: bidsArr[i].bidOwner,\n        price: bidsArr[i].bidPrice,\n        date: date,\n        time: firebase.firestore.Timestamp.now(),\n        sellerFee: !user.subscription,\n        buyerFee: !bidsArr[i].subscription,\n        share: sharesToSell[i],\n        transactionID: transactionID,\n        type: 'sell',\n        oldPrice: team.lastSoldPrice\n      });\n    }\n\n    let thisRef6 = db.collection('Users').doc(user.email);\n    batch.update(thisRef6, {\n      cash: firebase.firestore.FieldValue.increment(totalCost)\n    });\n    db.collection('Asks').where('team', '==', team.team).where('askOwner', '==', user.email).get().then(snapshot => {\n      const asks1 = [];\n      snapshot.forEach(doc => {\n        const data = doc.data();\n\n        for (let i = 0; i < sellShares; i++) {\n          if (data.askShare == sharesToSell[i]) {\n            asks1.push(data);\n          }\n        }\n      });\n      asks1.map(s => {\n        let deleteRef = db.collection('Asks').doc(`${s.askShare}-${user.email}`);\n        batch.delete(deleteRef);\n      });\n      batch.commit().then(() => {\n        alert(`You sold ${sellShares} shares for $${totalCost}`);\n        window.location.href = \"http://simbull.app\";\n      });\n    }).catch(error => console.log(error));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"TradePopup\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"SellShare\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        onClick: closeSell,\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fa fa-times-circle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 43\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ss-title\",\n        children: \"Sell\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ss-team\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"ss-img\",\n          src: `nba_jersey/${team.team}.png`,\n          alt: \"team\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 42\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"tc-name-sim\",\n          children: \"sim\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 116\n        }, this), team.team]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ss-shares\",\n        children: [\"You own \", shares, \" shares\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ss-shareAmt-underline\",\n        children: calc ? calc : '0'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ss-btn-div\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"ss-submit\",\n          onClick: submitSell,\n          children: \"Sell\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 85\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"ss-btn\",\n          onClick: () => {\n            addDigit(\"1\");\n          },\n          children: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"ss-btn\",\n          onClick: () => {\n            addDigit(\"2\");\n          },\n          children: \"2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"ss-btn\",\n          onClick: () => {\n            addDigit(\"3\");\n          },\n          children: \"3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"ss-btn\",\n          onClick: () => {\n            addDigit(\"4\");\n          },\n          children: \"4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"ss-btn\",\n          onClick: () => {\n            addDigit(\"5\");\n          },\n          children: \"5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"ss-btn\",\n          onClick: () => {\n            addDigit(\"6\");\n          },\n          children: \"6\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"ss-btn\",\n          onClick: () => {\n            addDigit(\"7\");\n          },\n          children: \"7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"ss-btn\",\n          onClick: () => {\n            addDigit(\"8\");\n          },\n          children: \"8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"ss-btn\",\n          onClick: () => {\n            addDigit(\"9\");\n          },\n          children: \"9\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"ss-btn\",\n          onClick: () => {\n            addDigit(\"0\");\n          },\n          children: \"0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"ss-btn-2\",\n          onClick: () => {\n            deleteDigit();\n          },\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa fa-arrow-left\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 80\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 261,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SellShare, \"fJyRNIF8jnMPxFVRefNuBFbMS6Q=\");\n\n_c = SellShare;\nexport default SellShare;\n\nvar _c;\n\n$RefreshReg$(_c, \"SellShare\");","map":{"version":3,"sources":["C:/Users/Dallas/Desktop/simbull-two/src/components/Functionality/SellShare.js"],"names":["React","useState","useEffect","Link","db","firebase","moment","SellShare","props","shares","team","user","closeSell","calc","setCalc","totalCost","shareCost","tradingCost","newHighestBidPrice","sharesToSell","setSharesToSell","sellShares","setSellShares","handleSellShares","e","target","value","bidsArr","setBidsArr","getBids","amountSharesToSell","setAmountSharesToSell","addDigit","x","hold","thisNum","concat","parseFloat","deleteDigit","editedText","slice","bidOwners","bidOwnersBidsAmt","ownersCashAmt","map","b","email","bidOwner","bidPrice","push","console","log","collection","get","then","snapshot","forEach","doc","data","includes","toString","cash","error","result","o","ind","indexOf","splice","bids1","getTotalCost","length","i","holder","subscription","getSharesToSell","sharesToSell1","s","substring","submitSell","sellSharesInt","parseInt","alert","answer","window","confirm","toFixed","uploadByBid","checkForShares","sharesOwned","newS","transactionNum","Math","random","transactionID","batch","num","bidNum","thisRef7","update","firestore","FieldValue","increment","thisRef1","currentAsk","lastSoldPrice","owner","onTradingBlock","totalPayouts","thisRef2","arrayUnion","thisRef3","arrayRemove","thisRef4","bidTeam","delete","newYearHigh","yearHigh","newYearLow","yearLow","thisRef5","bidsAvailable","totalBidPrice","date","format","thisRef8","set","seller","buyer","price","time","Timestamp","now","sellerFee","buyerFee","share","type","oldPrice","thisRef6","where","asks1","askShare","deleteRef","commit","location","href","catch"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport './functions.css'\r\nimport {Link} from 'react-router-dom'\r\nimport {db} from '../../services/firebase'\r\nimport firebase from 'firebase'\r\nimport moment from 'moment'\r\n\r\nconst SellShare = (props) => {\r\n    //props\r\n    const shares = props.shares\r\n    const team = props.team\r\n    const user = props.user\r\n    const closeSell = props.closeSell\r\n\r\n\r\n    //states\r\n    const [calc, setCalc] = useState('')\r\n\r\n    let totalCost = 0\r\n    let shareCost = 0\r\n    let tradingCost = 0\r\n    let newHighestBidPrice = 0\r\n\r\n    const [sharesToSell, setSharesToSell] = useState([])\r\n    const [sellShares, setSellShares] = useState()\r\n    const handleSellShares = (e) => {setSellShares(e.target.value)}\r\n    const [bidsArr, setBidsArr] = useState([])\r\n    useEffect(() => {getBids()}, [props.bidsArr])\r\n    const [amountSharesToSell, setAmountSharesToSell] = useState(0)\r\n\r\n    //Functionality\r\n    //calc add digit\r\n    const addDigit = (x) => {\r\n        let hold = calc\r\n        let thisNum = hold.concat(x)\r\n        setSellShares(parseFloat(thisNum))\r\n        setCalc(thisNum)\r\n    }\r\n\r\n    const deleteDigit = () => {\r\n        const editedText = calc.slice(0, -1)\r\n        let thisNum = parseFloat(editedText)\r\n        setSellShares(thisNum)\r\n        setCalc(editedText)\r\n    }\r\n\r\n    function getBids() {\r\n        if(props.bidsArr){\r\n            const bidOwners = []\r\n            const bidOwnersBidsAmt = {}\r\n            const ownersCashAmt = {}\r\n            //get bid owners and thier total bid amount\r\n            props.bidsArr.map( b => {\r\n                if(user.email !== b.bidOwner){\r\n                    if (bidOwnersBidsAmt[b.bidOwner]) {\r\n                        bidOwnersBidsAmt[b.bidOwner] = bidOwnersBidsAmt[b.bidOwner] + b.bidPrice;\r\n                    } \r\n                    else {\r\n                        bidOwnersBidsAmt[b.bidOwner] = b.bidPrice;\r\n                        bidOwners.push(b.bidOwner)\r\n                        console.log(b.bidOwner)\r\n                    }\r\n                }\r\n            })\r\n            console.log(bidOwners)\r\n            console.log(bidOwnersBidsAmt)\r\n            //get bid owners total cash\r\n            db.collection('Users').get().then((snapshot) => {\r\n                snapshot.forEach(doc => {\r\n                    const data = doc.data()\r\n                    console.log(bidOwners)\r\n                    if(bidOwners.includes(data.email.toString())){\r\n                        console.log('here')\r\n                        console.log(ownersCashAmt)\r\n                        if(!ownersCashAmt[data.email]){\r\n                            ownersCashAmt[data.email] = data.cash\r\n                        }\r\n                    }\r\n                    console.log(data.email)\r\n                    console.log(ownersCashAmt[data.email])\r\n                    console.log(ownersCashAmt[data.cash])\r\n                }, error => {console.log(error)})\r\n                console.log('there')\r\n                console.log(ownersCashAmt)\r\n                return ownersCashAmt\r\n            }).then((result) => {\r\n                //eliminating users from bidOwners Array if they don't have enough cash to cover their bids \r\n                bidOwners.map( o => {\r\n                    if(bidOwnersBidsAmt[o] >  ownersCashAmt[o]){\r\n                    let ind = bidOwners.indexOf(o)\r\n                    bidOwners.splice(ind, 1)\r\n                    }\r\n                })\r\n                return bidOwners\r\n            }).then((result) => {\r\n                //repopulating the bids array with bids only from users with enough cash\r\n                const bids1 = []\r\n                props.bidsArr.map(b => {\r\n                if(bidOwners.includes(b.bidOwner)){\r\n                    bids1.push(b)\r\n                }\r\n                })   \r\n                console.log(bids1) \r\n                setBidsArr(bids1)\r\n            })\r\n            \r\n        }\r\n    }\r\n\r\n    const getTotalCost = () => {\r\n        totalCost = 0\r\n        shareCost = 0\r\n        if(bidsArr.length > 0 & bidsArr.length>= sellShares){\r\n            for(let i = 0; i < sellShares; i++){\r\n                let holder = shareCost + bidsArr[i].bidPrice\r\n                shareCost = holder\r\n            }\r\n            if(!user.subscription){\r\n                tradingCost = 1\r\n            }\r\n            totalCost = shareCost - tradingCost\r\n        }\r\n\r\n    }\r\n    useEffect(() => {getTotalCost()}, [sellShares])\r\n    const getSharesToSell = () => {\r\n        const sharesToSell1 = []\r\n        user.shares.map(s => {\r\n            if(s.substring(0, s.length-4) == team.team){\r\n                sharesToSell1.push(s)\r\n            }\r\n        })\r\n        setSharesToSell(sharesToSell1)\r\n    }\r\n    useEffect(() => {getSharesToSell()}, [props.bidsArr])\r\n\r\n    const submitSell = () => {\r\n        let sellSharesInt = parseInt(sellShares)\r\n        if(sellShares == sellSharesInt){\r\n            if(amountSharesToSell<sellShares){\r\n                alert(`You don't own enough shares. You only own ${amountSharesToSell} shares.`)\r\n            }\r\n            else{\r\n                if(bidsArr.length >= sellShares & sellShares != 0){\r\n                    let answer = window.confirm(`Sell ${sellShares} shares for $${shareCost/sellShares} per share, for a total of $${totalCost}? ${!user.subscription ? `Includes a trading fee of $${tradingCost.toFixed(2)}.` : ''}`)\r\n                    if(answer){\r\n                        uploadByBid()\r\n                    }\r\n                }\r\n                else{\r\n                    alert(`There are not enough open bids to fill your order. Please try a smaller order or make an offer to sell. There are only ${bidsArr.length} available. `)\r\n                }\r\n            }\r\n        }\r\n        else{\r\n            alert(`Sorry we don't do fractional trading. Please try again with a whole number.`)\r\n        }\r\n        \r\n    }\r\n\r\n    const checkForShares = () =>{\r\n        let sharesOwned = 0\r\n        user.shares.map(s => {\r\n            let newS = s.substring(0, s.length - 4)\r\n            if(newS == team.team){\r\n                sharesOwned++\r\n            }\r\n        })\r\n        setAmountSharesToSell(sharesOwned)\r\n    }\r\n    useEffect(() => {\r\n        checkForShares()\r\n    }, [props.user])\r\n\r\n    async function uploadByBid() {\r\n        let transactionNum = (`000000000000${(Math.random() * 100000000000).toFixed(0)}`)\r\n        let transactionID = transactionNum.substring(transactionNum.length - 10, transactionNum.length)\r\n        var batch = db.batch()\r\n        for(let i=0; i< sellShares; i++){\r\n            if(!bidsArr[i].subscription){\r\n                let num = bidsArr[i].bidNum\r\n                if(num == 0){\r\n                    let thisRef7 = db.collection('Users').doc(bidsArr[i].bidOwner)\r\n                    batch.update(thisRef7,{\r\n                        cash: firebase.firestore.FieldValue.increment(-tradingCost)\r\n                    })\r\n                }\r\n            }\r\n            let thisRef1 = db.collection('Shares').doc(sharesToSell[i])\r\n            batch.update(thisRef1,{\r\n                currentAsk: null,\r\n                lastSoldPrice: bidsArr[i].bidPrice,\r\n                owner: bidsArr[i].bidOwner,\r\n                onTradingBlock: false,\r\n                totalPayouts: 0\r\n            })\r\n            let thisRef2 = db.collection('Users').doc(bidsArr[i].bidOwner)\r\n            batch.update(thisRef2,{\r\n                cash: firebase.firestore.FieldValue.increment(-bidsArr[i].bidPrice),\r\n                shares: firebase.firestore.FieldValue.arrayUnion(sharesToSell[i])\r\n            })\r\n            let thisRef3 = db.collection('Users').doc(user.email)\r\n            batch.update(thisRef3,{\r\n                shares: firebase.firestore.FieldValue.arrayRemove(sharesToSell[i])\r\n            })\r\n            let thisRef4 = db.collection('Bids').doc(`${bidsArr[i].bidTeam}-${bidsArr[i].bidOwner}-$${bidsArr[i].bidPrice}-${bidsArr[i].bidNum}`)\r\n            batch.delete(thisRef4)\r\n            let newYearHigh = team.yearHigh > bidsArr[i].bidPrice ? team.yearHigh : bidsArr[i].bidPrice\r\n            let newYearLow = team.yearLow < bidsArr[i].bidPrice ? team.yearLow : bidsArr[i].bidPrice\r\n            let thisRef5 = db.collection('Teams').doc(team.team)\r\n            batch.update(thisRef5, {\r\n                bidsAvailable: firebase.firestore.FieldValue.increment(-1),\r\n                totalBidPrice: firebase.firestore.FieldValue.increment(parseFloat(-bidsArr[i].bidPrice)),\r\n                lastSoldPrice: bidsArr[i].bidPrice,\r\n                yearHigh: newYearHigh,\r\n                yearLow: newYearLow\r\n            })\r\n            let date = moment().format('YYYYMMDD')\r\n            let thisRef8 = db.collection('Transactions').doc(`${date}-${sharesToSell[i]}-seller:${user.email}-buyer:${user.email}-price:${bidsArr[i].bidPrice}`)\r\n            batch.set(thisRef8, {\r\n                seller: user.email,\r\n                buyer: bidsArr[i].bidOwner,\r\n                price: bidsArr[i].bidPrice,\r\n                date: date,\r\n                time: firebase.firestore.Timestamp.now(),\r\n                sellerFee: !user.subscription,\r\n                buyerFee: !bidsArr[i].subscription,\r\n                share: sharesToSell[i],\r\n                transactionID: transactionID,\r\n                type: 'sell',\r\n                oldPrice: team.lastSoldPrice\r\n            })\r\n        }\r\n        let thisRef6 = db.collection('Users').doc(user.email)\r\n        batch.update(thisRef6, {\r\n            cash: firebase.firestore.FieldValue.increment(totalCost),\r\n        })\r\n        db.collection('Asks').where('team', '==', team.team).where('askOwner', '==', user.email).get().then((snapshot) => {\r\n            const asks1 = [];\r\n            snapshot.forEach((doc) => {\r\n              const data = doc.data();\r\n              for(let i = 0; i < sellShares; i++){\r\n                  if(data.askShare == sharesToSell[i]){\r\n                    asks1.push(data);\r\n                  }\r\n              }\r\n            });\r\n            asks1.map(s => {\r\n                let deleteRef = db.collection('Asks').doc(`${s.askShare}-${user.email}`)\r\n                batch.delete(deleteRef)\r\n            })\r\n            batch.commit().then(()=> {\r\n                alert(`You sold ${sellShares} shares for $${totalCost}`)\r\n                window.location.href = \"http://simbull.app\";\r\n            })\r\n            }).catch((error) => console.log(error))\r\n    }\r\n\r\n\r\n    return(\r\n        <div className=\"TradePopup\">\r\n            <div className=\"SellShare\">\r\n                <Link onClick={closeSell}><i className=\"fa fa-times-circle\"></i></Link>\r\n                <div className=\"ss-title\">Sell</div>\r\n                <div className='ss-team'><img className=\"ss-img\"  src={`nba_jersey/${team.team}.png`} alt='team' /><span className=\"tc-name-sim\">sim</span>{team.team}</div>\r\n                <div className='ss-shares'>You own {shares} shares</div>\r\n                <div className=\"ss-shareAmt-underline\">{calc ? calc : '0'}</div>\r\n                <div className=\"ss-btn-div\">\r\n                    <button className=\"ss-submit\" onClick={submitSell}>Sell</button><br />\r\n                    <button className=\"ss-btn\" onClick={()=>{addDigit(\"1\")}}>1</button>\r\n                    <button className=\"ss-btn\" onClick={()=>{addDigit(\"2\")}}>2</button>\r\n                    <button className=\"ss-btn\" onClick={()=>{addDigit(\"3\")}}>3</button>\r\n                    <button className=\"ss-btn\" onClick={()=>{addDigit(\"4\")}}>4</button>\r\n                    <button className=\"ss-btn\" onClick={()=>{addDigit(\"5\")}}>5</button>\r\n                    <button className=\"ss-btn\" onClick={()=>{addDigit(\"6\")}}>6</button>\r\n                    <button className=\"ss-btn\" onClick={()=>{addDigit(\"7\")}}>7</button>\r\n                    <button className=\"ss-btn\" onClick={()=>{addDigit(\"8\")}}>8</button>\r\n                    <button className=\"ss-btn\" onClick={()=>{addDigit(\"9\")}}>9</button>\r\n                    <button className=\"ss-btn\" onClick={()=>{addDigit(\"0\")}}>0</button>\r\n                    <button className=\"ss-btn-2\" onClick={()=>{deleteDigit()}}><i className=\"fa fa-arrow-left\"></i></button>\r\n                </div>\r\n            </div> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SellShare"]},"metadata":{},"sourceType":"module"}