{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Dallas\\\\Desktop\\\\simbull-two\\\\src\\\\components\\\\Portfolio\\\\Histories\\\\TradeHistory.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './histories.css';\nimport { db } from '../../../services/firebase';\n\nconst TradeHistory = props => {\n  _s();\n\n  //props\n  const user = props.user; //states\n\n  const [buys, setBuys] = useState([]);\n  const [sells, setSells] = useState([]);\n  const [trades, setTrades] = useState([]); //Functions\n\n  const getTrades = () => {\n    let buysArr = [];\n    let sellsArr = [];\n    db.collection('Transactions').where('buyer', '==', user.email).get().then(snapshot => {\n      snapshot.forEach(doc => {\n        const data = doc.data();\n        buysArr.push(data);\n      });\n      setBuys(buysArr);\n    });\n    db.collection('Transactions').where('seller', '==', user.email).get().then(snapshot => {\n      snapshot.forEach(doc => {\n        const data = doc.data();\n        sellsArr.push(data);\n      });\n      setSells(sellsArr);\n    });\n  };\n\n  useEffect(() => {\n    getTrades();\n  }, []);\n\n  const combineTrades = () => {\n    let tradesArr = buys.concat(sells);\n    tradesArr.sort(function (a, b) {\n      return b.date - a.date;\n    });\n    setTrades(tradesArr);\n  };\n\n  useEffect(() => {\n    combineTrades();\n  }, [buys, sells]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"TradeHistory\",\n    children: [trades.length > 0 && trades.map(t => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"h-trade-div\",\n        children: [/*#__PURE__*/_jsxDEV(\"hr\", {\n          className: \"h-trade-hr\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"h-trade-div-left\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"h-trade-div-type\",\n            children: t.buyer === user.email ? `Buy: sim${t.share.substring(0, t.share.length - 4)}` : `Sell: sim${t.share.substring(0, t.share.length - 4)}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"h-trade-div-date\",\n            children: `${t.date.substring(4, 6)}/${t.date.substring(6, 8)}/${t.date.substring(0, 4)}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"h-trade-div-right blk-txt\",\n          children: [t.buyer === user.email ? '-' : '+', `$${t.price.toFixed(2)}`]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"hr\", {\n      className: \"h-trade-hr\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TradeHistory, \"nJWTlazNoCt3wbUH5C0KT0EASkw=\");\n\n_c = TradeHistory;\nexport default TradeHistory;\n\nvar _c;\n\n$RefreshReg$(_c, \"TradeHistory\");","map":{"version":3,"sources":["C:/Users/Dallas/Desktop/simbull-two/src/components/Portfolio/Histories/TradeHistory.js"],"names":["React","useState","useEffect","db","TradeHistory","props","user","buys","setBuys","sells","setSells","trades","setTrades","getTrades","buysArr","sellsArr","collection","where","email","get","then","snapshot","forEach","doc","data","push","combineTrades","tradesArr","concat","sort","a","b","date","length","map","t","buyer","share","substring","price","toFixed"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport './histories.css'\r\nimport {db} from '../../../services/firebase'\r\n\r\nconst TradeHistory = (props) => {\r\n    //props\r\n    const user = props.user\r\n\r\n    //states\r\n    const [buys, setBuys] = useState([])\r\n    const [sells, setSells] = useState([])\r\n    const [trades, setTrades] = useState([])\r\n\r\n    //Functions\r\n    const getTrades = () => {\r\n        let buysArr = []\r\n        let sellsArr = []\r\n        db.collection('Transactions').where('buyer', '==', user.email).get().then(snapshot => {\r\n            snapshot.forEach(doc => {\r\n                const data = doc.data()\r\n                buysArr.push(data)\r\n            })\r\n            setBuys(buysArr)\r\n        })\r\n        db.collection('Transactions').where('seller', '==', user.email).get().then(snapshot => {\r\n            snapshot.forEach(doc => {\r\n                const data = doc.data()\r\n                sellsArr.push(data)\r\n            })\r\n            setSells(sellsArr)\r\n        })\r\n    }\r\n    useEffect(() => {\r\n        getTrades()\r\n    }, [])\r\n\r\n    const combineTrades = () => {\r\n        let tradesArr = buys.concat(sells)\r\n        tradesArr.sort(function(a, b) {\r\n            return b.date - a.date;\r\n        });\r\n        setTrades(tradesArr)\r\n    }\r\n    useEffect(() => {\r\n        combineTrades()\r\n    }, [buys, sells])\r\n\r\n    return(\r\n        <div className=\"TradeHistory\">\r\n            {trades.length > 0 && trades.map(t=> {\r\n                return(\r\n                    <div className=\"h-trade-div\">\r\n                        <hr className=\"h-trade-hr\" />\r\n                        <div className=\"h-trade-div-left\">\r\n                            <div className=\"h-trade-div-type\">\r\n                                {t.buyer === user.email ? `Buy: sim${t.share.substring(0, t.share.length - 4)}` : `Sell: sim${t.share.substring(0, t.share.length - 4)}`}\r\n                            </div>\r\n                            <div className=\"h-trade-div-date\">   \r\n                                {`${t.date.substring(4, 6)}/${t.date.substring(6, 8)}/${t.date.substring(0, 4)}`}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"h-trade-div-right blk-txt\"> \r\n                            {t.buyer === user.email ? '-' : '+'}{`$${t.price.toFixed(2)}`}\r\n                        </div>\r\n                    </div>\r\n                )\r\n            })}\r\n            \r\n            <hr className=\"h-trade-hr\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TradeHistory"]},"metadata":{},"sourceType":"module"}