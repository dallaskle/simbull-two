{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Dallas\\\\Desktop\\\\simbull-two\\\\src\\\\components\\\\Portfolio\\\\PortfolioChart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport './Portfolio.css';\n\nconst PortfolioChart = props => {\n  _s();\n\n  const [chartData, setChartData] = useState();\n  const [isMobile, setMobile] = useState(window.innerWidth < 768);\n  const prices = [150, 151, 153, 152, 154, 156, 153, 155, 158];\n  const label = ['01/01', '01/02', '01/03', '01/04', '01/05', '01/06', '01/07', '01/08', '01/09'];\n\n  const updateMedia = () => {\n    setMobile(window.innerWidth < 768);\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"resize\", updateMedia);\n    return () => window.removeEventListener(\"resize\", updateMedia);\n  });\n\n  const chart = () => {\n    setChartData({\n      labels: props.labels,\n      datasets: [{\n        fill: false,\n        lineTension: 0.5,\n        backgroundColor: '#c5b358',\n        borderColor: '#c5b358',\n        borderWidth: 3,\n        data: props.prices,\n        yAxisID: 'price1'\n      }]\n    });\n  };\n\n  useEffect(() => {\n    chart();\n  }, [props.labels, props.prices]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Line, {\n      data: chartData,\n      options: {\n        title: {\n          display: false,\n          text: ' ',\n          fontSize: 20\n        },\n        legend: {\n          display: false\n        },\n        layout: {\n          padding: {\n            left: 20,\n            right: 20,\n            top: 20,\n            bottom: 20\n          }\n        },\n        elements: {\n          point: {\n            radius: 0\n          }\n        },\n        scales: {\n          yAxes: [{\n            display: isMobile ? false : true,\n            position: 'right',\n            id: 'price1'\n          }],\n          xAxes: [{\n            display: false\n          }]\n        },\n        tooltips: {\n          mode: 'nearest',\n          intersect: false\n        },\n        hover: {\n          mode: 'index',\n          intersect: false\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 7\n  }, this);\n};\n\n_s(PortfolioChart, \"FvfHZF1gWmOLJ2zHovYfhx7YCAM=\");\n\n_c = PortfolioChart;\nexport default PortfolioChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"PortfolioChart\");","map":{"version":3,"sources":["C:/Users/Dallas/Desktop/simbull-two/src/components/Portfolio/PortfolioChart.js"],"names":["React","useState","useEffect","Line","PortfolioChart","props","chartData","setChartData","isMobile","setMobile","window","innerWidth","prices","label","updateMedia","addEventListener","removeEventListener","chart","labels","datasets","fill","lineTension","backgroundColor","borderColor","borderWidth","data","yAxisID","title","display","text","fontSize","legend","layout","padding","left","right","top","bottom","elements","point","radius","scales","yAxes","position","id","xAxes","tooltips","mode","intersect","hover"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport {Line} from 'react-chartjs-2';\r\nimport './Portfolio.css'\r\n\r\n\r\n\r\nconst PortfolioChart = (props) => {\r\n    const [chartData, setChartData] = useState()\r\n\r\n    const [isMobile, setMobile] = useState(window.innerWidth < 768);\r\n\r\n    const prices = [150, 151, 153, 152, 154, 156, 153, 155, 158]\r\n    const label = ['01/01','01/02','01/03','01/04','01/05','01/06','01/07','01/08','01/09',]\r\n\r\n    const updateMedia = () => {\r\n      setMobile(window.innerWidth < 768);\r\n    };\r\n  \r\n    useEffect(() => {\r\n      window.addEventListener(\"resize\", updateMedia);\r\n      return () => window.removeEventListener(\"resize\", updateMedia);\r\n    });\r\n\r\n    const chart = () => {\r\n      setChartData({\r\n        labels: props.labels,\r\n        datasets: [\r\n          {\r\n            fill: false,\r\n            lineTension: 0.5,\r\n            backgroundColor: '#c5b358',\r\n            borderColor: '#c5b358',\r\n            borderWidth: 3,\r\n            data: props.prices,\r\n            yAxisID: 'price1'\r\n          },\r\n        ]\r\n      })\r\n    }\r\n    useEffect(() => {\r\n      chart()\r\n    }, [props.labels, props.prices])\r\n  \r\n    return (\r\n      <div>\r\n        <Line\r\n          data={chartData}\r\n          options={{\r\n            title:{\r\n              display:false,\r\n              text:' ',\r\n              fontSize:20\r\n            },\r\n            legend:{\r\n                display: false\r\n            },\r\n            layout: {\r\n                padding: {\r\n                    left: 20,\r\n                    right: 20,\r\n                    top: 20,\r\n                    bottom: 20\r\n                }\r\n            },\r\n            elements: {\r\n                point: {\r\n                    radius: 0\r\n                }\r\n            },\r\n            scales:\r\n            {\r\n                yAxes: [{\r\n                  display : isMobile ? false : true,\r\n                  position: 'right',\r\n                  id: 'price1',\r\n                }],\r\n                xAxes: [{\r\n                    display : false\r\n                \r\n            }]\r\n            },\r\n                tooltips: {\r\n                   mode: 'nearest',\r\n                   intersect: false\r\n                },\r\n                hover: {\r\n                   mode: 'index',\r\n                   intersect: false\r\n                }\r\n          }}\r\n        />\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default PortfolioChart"]},"metadata":{},"sourceType":"module"}