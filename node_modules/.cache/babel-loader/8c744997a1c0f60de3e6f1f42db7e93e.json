{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Dallas\\\\Desktop\\\\simbull-two\\\\src\\\\components\\\\Portfolio\\\\PTotal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './portfolio.css';\nimport PPayouts from './PPayouts';\n\nconst PTotal = props => {\n  _s();\n\n  //get states\n  const [user, setUser] = useState();\n  const [teams, setTeams] = useState();\n  const [value, setValue] = useState(0);\n  const [percentReturn, setPercentReturn] = useState(0); //Functions\n\n  const loadUser = () => {\n    setUser(props.user);\n  };\n\n  useEffect(() => {\n    loadUser();\n  }, [props.user]);\n\n  const loadTeams = () => {\n    setTeams(props.teams);\n  };\n\n  useEffect(() => {\n    loadTeams();\n  }, [props.teams]);\n\n  const getValue = () => {\n    if (user) {\n      let holder = 0;\n      user.shares && user.shares.map(s => {\n        let team = s.substring(0, s.length - 4);\n        teams !== undefined && teams.map(t => {\n          if (team === t.team) {\n            holder = holder + t.lastSoldPrice;\n          }\n        });\n      });\n      return (holder + user.cash).toFixed(2);\n    }\n\n    return 0;\n  };\n\n  const getPercentReturn = () => {\n    return ((getValue() - user.currentMoneyDeposited) / user.currentMoneyDeposited * 100).toFixed(2);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"PTotal\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-total-account\",\n      children: \"Account Value\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n      className: \"p-total-hr\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-total-value\",\n      children: [\"$\", getValue()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-total-cash\",\n      children: [\"Cash: \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"p-total-cash-amt\",\n        children: [\"$\", user.cash && user.cash.toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 49\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(PPayouts, {\n      user: user,\n      teams: teams\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n      className: \"p-graph-top\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: getPercentReturn() >= 0 ? \"p-graph-return green\" : \"p-graph-return red\",\n      children: [\"$\", (getValue() - user.currentMoneyDeposited).toFixed(2), \" [\", getPercentReturn() >= 0 && '+', getPercentReturn(), \"%] - All\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PTotal, \"eATGmULMRzPSQtNd7y431F5Pu98=\");\n\n_c = PTotal;\nexport default PTotal;\n\nvar _c;\n\n$RefreshReg$(_c, \"PTotal\");","map":{"version":3,"sources":["C:/Users/Dallas/Desktop/simbull-two/src/components/Portfolio/PTotal.js"],"names":["React","useState","useEffect","PPayouts","PTotal","props","user","setUser","teams","setTeams","value","setValue","percentReturn","setPercentReturn","loadUser","loadTeams","getValue","holder","shares","map","s","team","substring","length","undefined","t","lastSoldPrice","cash","toFixed","getPercentReturn","currentMoneyDeposited"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport './portfolio.css'\r\nimport PPayouts from './PPayouts'\r\n\r\nconst PTotal = (props) => {\r\n\r\n    //get states\r\n    const [user, setUser] = useState()\r\n    const [teams, setTeams] = useState()\r\n    const [value, setValue] = useState(0)\r\n    const [percentReturn, setPercentReturn] = useState(0)\r\n\r\n    //Functions\r\n    const loadUser = () => {\r\n        setUser(props.user)\r\n    }\r\n    useEffect(() => {\r\n        loadUser()\r\n    }, [props.user])\r\n    const loadTeams = () => {\r\n        setTeams(props.teams)\r\n    }\r\n    useEffect(() => {\r\n        loadTeams()\r\n    }, [props.teams])\r\n\r\n    const getValue = () => {\r\n        if(user){\r\n            let holder = 0\r\n                user.shares && user.shares.map(s => {\r\n                    let team = s.substring(0, s.length - 4)\r\n                    teams !== undefined && teams.map(t => {\r\n                        if(team === t.team){\r\n                            holder = holder + t.lastSoldPrice\r\n                        }\r\n                    })\r\n                })\r\n            return (holder + user.cash).toFixed(2)\r\n        }\r\n        return 0\r\n    }\r\n\r\n    const getPercentReturn = () => {\r\n        return ((((getValue() - user.currentMoneyDeposited) / user.currentMoneyDeposited) * 100).toFixed(2))\r\n    }\r\n\r\n\r\n    return(\r\n        <div className='PTotal'>\r\n            <div className=\"p-total-account\">Account Value</div>\r\n            <hr className=\"p-total-hr\" />\r\n            <div className=\"p-total-value\">${getValue()}</div>\r\n            <div className=\"p-total-cash\">Cash: <span className=\"p-total-cash-amt\">${user.cash && user.cash.toFixed(2)}</span></div>\r\n            <PPayouts user={user} teams={teams} />\r\n            <hr className=\"p-graph-top\" />\r\n            <div className={getPercentReturn() >=0 ? \"p-graph-return green\" : \"p-graph-return red\" }>${(getValue() - user.currentMoneyDeposited).toFixed(2)} [{getPercentReturn()>=0 && '+'}{getPercentReturn()}%] - All</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PTotal"]},"metadata":{},"sourceType":"module"}