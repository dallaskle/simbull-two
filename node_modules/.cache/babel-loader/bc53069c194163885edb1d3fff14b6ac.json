{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Dallas\\\\Desktop\\\\simbull-two\\\\src\\\\components\\\\Account\\\\PayPal\\\\ReactPayPal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\"; //import '../Acount.css'\n\nimport firebase from 'firebase';\nimport { db } from '../../../services/firebase';\nimport moment from 'moment';\nexport default function ReactPayPal(props) {\n  _s();\n\n  const user = props.user;\n  const [paid, setPaid] = React.useState(false);\n  const [error, setError] = React.useState(null);\n  const [minAmt, setMinAmt] = useState();\n  const paypalRef = React.useRef();\n  const [dbDeposit, setdbDeposit] = useState(false);\n  let depositValue; // To show PayPal buttons \n\n  const runPayPal = () => {\n    window.paypal.Buttons({\n      createOrder: function (data, actions) {\n        return actions.order.create({\n          intent: \"CAPTURE\",\n          purchase_units: [{\n            description: `SimBull Cash for user: ${user.email}`,\n            amount: {\n              currency_code: \"USD\",\n              value: props.amount\n            }\n          }]\n        });\n      },\n      onApprove: function (data, actions) {\n        setPaid(true);\n        return actions.order.capture().then(function (details) {\n          alert('Transaction completed by ' + details.payer.name.given_name);\n        });\n      },\n      onError: err => {\n        setError(err);\n        console.error(err);\n      }\n    }).render(paypalRef.current);\n  };\n\n  function whenAvailable(name, callback) {\n    var interval = 10; // ms\n\n    window.setTimeout(function () {\n      if (window[name]) {\n        callback(window[name]);\n      } else {\n        whenAvailable(name, callback);\n      }\n    }, interval);\n  }\n\n  useEffect(() => {\n    whenAvailable(\"twttr\", function (t) {\n      runPayPal;\n    });\n  }, []); // If the payment has been made\n\n  if (paid) {\n    console.log(1);\n    let date = moment().format('MMMM Do YYYY, h:mm:ss a');\n\n    if (!dbDeposit) {\n      console.log(2);\n      setdbDeposit(true);\n      let amount = parseFloat(props.amount);\n      let pBonus = 0;\n      let dBonus = 0; //random twitter guy\n\n      if (user.code && user.code === 324923) {\n        pBonus = 5;\n      } //shooting sports\n\n\n      if (user.code && user.code === 879312) {\n        pBonus = 5;\n      } //mlm\n\n\n      if (user.code && user.code === 649184) {\n        pBonus = 5;\n      } //utah jazz\n\n\n      if (user.code && user.code === 291384) {\n        pBonus = 5;\n      } //dallas mavericks\n\n\n      if (user.code && user.code === 238976) {\n        pBonus = 5;\n      } //76ers (browns)\n\n\n      if (user.code && user.code === 938784) {\n        pBonus = 5;\n      } //trailblazers (saints)\n\n\n      if (user.code && user.code === 162053) {\n        pBonus = 5;\n      } //james klein ref\n\n\n      if (user.code && user.code === 825792) {\n        pBonus = 0;\n      }\n\n      pBonus = 0;\n\n      if (user.code === 'NBAZayy' || user.code === 'hoopology' || user.code === 'grantsportz' || user.code === 'PigSpin') {\n        if (user.currentMoneyDeposited === 0) {\n          pBonus = 10;\n        }\n      }\n\n      if (amount >= 100) {\n        dBonus = 0 * amount;\n\n        if (amount >= 500) {\n          dBonus = 0 * amount;\n        }\n\n        if (dBonus > 200) {\n          dBonus = 200;\n        }\n\n        console.log(3);\n        db.collection('Deposits').doc(`${date}-${user.email}`).set({\n          user: user.email,\n          amount: amount,\n          date: date,\n          bonus: pBonus + dBonus,\n          type: 'deposit',\n          userCode: user.code && user.code\n        });\n        db.collection('Users').doc(user.email).update({\n          cash: firebase.firestore.FieldValue.increment(amount + pBonus + dBonus),\n          currentMoneyDeposited: firebase.firestore.FieldValue.increment(amount),\n          totalValue: firebase.firestore.FieldValue.increment(amount + pBonus + dBonus),\n          bonusesReceived: pBonus + dBonus\n        }).then(result => {\n          alert(`Deposit Successful! The funds will appear in the portfolio after the page is refreshed.`);\n          return window.location.href = \"https://simbull.app\";\n        });\n      } else {\n        db.collection('Deposits').doc(`${date}-${user.email}`).set({\n          user: user.email,\n          amount: amount,\n          date: date,\n          bonus: pBonus,\n          type: 'deposit'\n        });\n        db.collection('Users').doc(user.email).update({\n          cash: firebase.firestore.FieldValue.increment(amount + pBonus),\n          currentMoneyDeposited: firebase.firestore.FieldValue.increment(amount + pBonus),\n          totalValue: firebase.firestore.FieldValue.increment(amount + pBonus)\n        }).then(result => {\n          alert(`Deposit Successful! The funds will appear in the portfolio after the page is refreshed.`);\n          return window.location.href = \"https://simbull.app\";\n        });\n      }\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Deposit Successful! The funds will appear in the portfolio after the page is refreshed.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 12\n    }, this);\n  } // If any error occurs\n\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Error Occurred in processing payment! Please try again.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 12\n    }, this);\n  } // Default Render\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Transfer\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Paypal-Box\",\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"Paypal-amount\",\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 54\n        }, this), \"$\", props.amount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Click the Payment Option You Prefer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: paypalRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 21\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ReactPayPal, \"EvKkXWQ6ZiM+V8T7oParU8/P8QM=\");\n\n_c = ReactPayPal;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReactPayPal\");","map":{"version":3,"sources":["C:/Users/Dallas/Desktop/simbull-two/src/components/Account/PayPal/ReactPayPal.js"],"names":["React","useState","firebase","db","moment","ReactPayPal","props","user","paid","setPaid","error","setError","minAmt","setMinAmt","paypalRef","useRef","dbDeposit","setdbDeposit","depositValue","runPayPal","window","paypal","Buttons","createOrder","data","actions","order","create","intent","purchase_units","description","email","amount","currency_code","value","onApprove","capture","then","details","alert","payer","name","given_name","onError","err","console","render","current","whenAvailable","callback","interval","setTimeout","useEffect","t","log","date","format","parseFloat","pBonus","dBonus","code","currentMoneyDeposited","collection","doc","set","bonus","type","userCode","update","cash","firestore","FieldValue","increment","totalValue","bonusesReceived","result","location","href"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\n//import '../Acount.css'\r\nimport firebase from 'firebase'\r\nimport {db} from '../../../services/firebase'\r\nimport moment from 'moment'\r\n\r\nexport default function ReactPayPal(props) {\r\n  const user = props.user\r\n  const [paid, setPaid] = React.useState(false);\r\n  const [error, setError] = React.useState(null);\r\n  const [minAmt, setMinAmt] = useState()\r\n  const paypalRef = React.useRef();\r\n  const [dbDeposit, setdbDeposit] = useState(false)\r\n\r\n  let depositValue \r\n\r\n  // To show PayPal buttons \r\n  const runPayPal = () => {\r\n    window.paypal.Buttons({\r\n      createOrder: function(data, actions) {\r\n        return actions.order.create({\r\n          intent: \"CAPTURE\",\r\n            purchase_units: [\r\n              {\r\n                description: `SimBull Cash for user: ${user.email}`,\r\n                amount: {\r\n                  currency_code: \"USD\",\r\n                  value: props.amount\r\n                }\r\n              }\r\n            ]\r\n        });\r\n      },\r\n      onApprove: function(data, actions) {\r\n        setPaid(true)\r\n        return actions.order.capture().then(function(details) {\r\n          alert('Transaction completed by ' + details.payer.name.given_name);\r\n        });\r\n      },\r\n      onError: (err) => {\r\n        setError(err);\r\n        console.error(err);\r\n      }\r\n    }).render(paypalRef.current);\r\n  }\r\n\r\n  function whenAvailable(name, callback) {\r\n    var interval = 10; // ms\r\n    window.setTimeout(function() {\r\n        if (window[name]) {\r\n            callback(window[name]);\r\n        } else {\r\n            whenAvailable(name, callback);\r\n        }\r\n    }, interval);\r\n  }\r\n\r\n  useEffect(() => {\r\n    whenAvailable(\"twttr\", function(t) {\r\n      runPayPal\r\n    });\r\n  }, [])\r\n\r\n\r\n  // If the payment has been made\r\n  if (paid) {\r\n    console.log(1)\r\n    let date = moment().format('MMMM Do YYYY, h:mm:ss a')\r\n    if(!dbDeposit){\r\n      console.log(2)\r\n      setdbDeposit(true)\r\n      let amount = parseFloat(props.amount)\r\n      let pBonus = 0\r\n      let dBonus = 0\r\n      //random twitter guy\r\n      if(user.code && user.code === 324923){pBonus = 5}\r\n      //shooting sports\r\n      if(user.code && user.code === 879312){pBonus = 5}\r\n      //mlm\r\n      if(user.code && user.code === 649184){pBonus = 5}\r\n      //utah jazz\r\n      if(user.code && user.code === 291384){pBonus = 5}\r\n      //dallas mavericks\r\n      if(user.code && user.code === 238976){pBonus = 5}\r\n      //76ers (browns)\r\n      if(user.code && user.code === 938784){pBonus = 5}\r\n      //trailblazers (saints)\r\n      if(user.code && user.code === 162053){pBonus = 5}\r\n      //james klein ref\r\n      if(user.code && user.code === 825792){pBonus = 0}\r\n      pBonus = 0\r\n      if(user.code === 'NBAZayy' || user.code === 'hoopology' || user.code === 'grantsportz' || user.code === 'PigSpin'){if(user.currentMoneyDeposited === 0){pBonus = 10}}\r\n      if(amount >= 100){\r\n        dBonus = 0 * amount\r\n        if(amount >=500){\r\n          dBonus = 0 * amount\r\n        }\r\n        if(dBonus > 200){\r\n          dBonus = 200\r\n        }\r\n        console.log(3)\r\n        db.collection('Deposits').doc(`${date}-${user.email}`).set({\r\n          user: user.email,\r\n          amount: amount,\r\n          date: date,\r\n          bonus: pBonus + dBonus,\r\n          type: 'deposit',\r\n          userCode: user.code && user.code\r\n        })\r\n        db.collection('Users').doc(user.email).update({\r\n          cash: firebase.firestore.FieldValue.increment(amount + pBonus + dBonus),\r\n          currentMoneyDeposited: firebase.firestore.FieldValue.increment(amount),\r\n          totalValue: firebase.firestore.FieldValue.increment(amount + pBonus + dBonus),\r\n          bonusesReceived: pBonus + dBonus\r\n        }).then((result) => {\r\n          alert(`Deposit Successful! The funds will appear in the portfolio after the page is refreshed.`)\r\n          return window.location.href = \"https://simbull.app\";\r\n        })\r\n      }else{ \r\n          db.collection('Deposits').doc(`${date}-${user.email}`).set({\r\n            user: user.email,\r\n            amount: amount,\r\n            date: date,\r\n            bonus: pBonus,\r\n            type: 'deposit'\r\n          })\r\n          db.collection('Users').doc(user.email).update({\r\n            cash: firebase.firestore.FieldValue.increment(amount + pBonus),\r\n            currentMoneyDeposited: firebase.firestore.FieldValue.increment(amount + pBonus),\r\n            totalValue: firebase.firestore.FieldValue.increment(amount + pBonus),\r\n          }).then((result) => {\r\n            alert(`Deposit Successful! The funds will appear in the portfolio after the page is refreshed.`)\r\n            return window.location.href = \"https://simbull.app\";\r\n          })\r\n        }  \r\n      \r\n    }\r\n    return <div>Deposit Successful! The funds will appear in the portfolio after the page is refreshed.</div>;\r\n  }\r\n\r\n  // If any error occurs\r\n  if (error) {\r\n    return <div>Error Occurred in processing payment! Please try again.</div>;\r\n  }\r\n\r\n  // Default Render\r\n  return (\r\n    <div className=\"Transfer\">\r\n                    <div className=\"Paypal-Box\">\r\n                        <br></br>\r\n                        <br></br>\r\n                        <p className=\"Paypal-amount\"><br></br>${props.amount}</p>\r\n                        <p>Click the Payment Option You Prefer</p>\r\n                        <div ref={paypalRef} />\r\n                    </div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}