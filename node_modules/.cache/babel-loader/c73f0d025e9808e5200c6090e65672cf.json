{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Dallas\\\\Desktop\\\\simbull-two\\\\src\\\\components\\\\Portfolio\\\\PTotal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './portfolio.css';\nimport PPayouts from './PPayouts';\nimport Bonus from './Bonus';\n\nconst PTotal = props => {\n  _s();\n\n  //get states\n  const [user, setUser] = useState();\n  const [teams, setTeams] = useState();\n  const [value, setValue] = useState(0);\n  const [percentReturn, setPercentReturn] = useState(0); //Functions\n\n  const loadUser = () => {\n    setUser(props.user);\n  };\n\n  useEffect(() => {\n    loadUser();\n  }, [props.user]);\n\n  const loadTeams = () => {\n    setTeams(props.teams);\n  };\n\n  useEffect(() => {\n    loadTeams();\n  }, [props.teams]);\n\n  const getValue = () => {\n    if (user) {\n      let holder = 0;\n\n      if (user.shares) {\n        let uShares = user.shares;\n\n        for (let i = 0; i < uShares.length; i++) {\n          let team = uShares[i].substring(0, uShares[i].length - 4);\n\n          if (uShares.indexOf(uShares[i]) === i) {\n            let count = 0;\n            teams !== undefined && teams.map(t => {\n              count++;\n\n              if (count < 63) {\n                if (team === t.team) {\n                  holder = holder + t.lastSoldPrice;\n                }\n              }\n            });\n          }\n        }\n      }\n\n      return (holder + user.cash).toFixed(2);\n    }\n\n    return 0;\n  };\n\n  const getPercentReturn = () => {\n    return ((getValue() - (user ? user.currentMoneyDeposited : 0)) / (user ? user.currentMoneyDeposited : 0) * 100).toFixed(2);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"PTotal\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-total-account\",\n      children: \"Account Value\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n      className: \"p-total-hr\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-total-value\",\n      children: [\"$\", getValue()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-total-cash\",\n      children: [\"Cash: \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"p-total-cash-amt\",\n        children: [\"$\", user && user.cash && user.cash.toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 49\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), user && user.code && user.tenure < 22 && user.bonusesReceived === 0 && /*#__PURE__*/_jsxDEV(Bonus, {\n      user: props.user\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 85\n    }, this), /*#__PURE__*/_jsxDEV(PPayouts, {\n      user: props.user,\n      teams: props.teams\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n      className: \"p-graph-top\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: getPercentReturn() >= 0 ? \"p-graph-return green\" : \"p-graph-return red\",\n      children: [\"$\", (getValue() - (user && user.currentMoneyDeposited)).toFixed(2), \" [\", getPercentReturn() >= 0 && '+', getPercentReturn(), \"%] - All\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PTotal, \"eATGmULMRzPSQtNd7y431F5Pu98=\");\n\n_c = PTotal;\nexport default PTotal;\n\nvar _c;\n\n$RefreshReg$(_c, \"PTotal\");","map":{"version":3,"sources":["C:/Users/Dallas/Desktop/simbull-two/src/components/Portfolio/PTotal.js"],"names":["React","useState","useEffect","PPayouts","Bonus","PTotal","props","user","setUser","teams","setTeams","value","setValue","percentReturn","setPercentReturn","loadUser","loadTeams","getValue","holder","shares","uShares","i","length","team","substring","indexOf","count","undefined","map","t","lastSoldPrice","cash","toFixed","getPercentReturn","currentMoneyDeposited","code","tenure","bonusesReceived"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport './portfolio.css'\r\nimport PPayouts from './PPayouts'\r\nimport Bonus from './Bonus'\r\n\r\nconst PTotal = (props) => {\r\n\r\n    //get states\r\n    const [user, setUser] = useState()\r\n    const [teams, setTeams] = useState()\r\n    const [value, setValue] = useState(0)\r\n    const [percentReturn, setPercentReturn] = useState(0)\r\n\r\n    //Functions\r\n    const loadUser = () => {\r\n        setUser(props.user)\r\n    }\r\n    useEffect(() => {\r\n        loadUser()\r\n    }, [props.user])\r\n    const loadTeams = () => {\r\n        setTeams(props.teams)\r\n    }\r\n    useEffect(() => {\r\n        loadTeams()\r\n    }, [props.teams])\r\n\r\n    const getValue = () => {\r\n        if(user){\r\n            let holder = 0\r\n                if(user.shares){\r\n                    let uShares = user.shares\r\n                    for(let i = 0; i < uShares.length; i++){\r\n                        let team = uShares[i].substring(0, uShares[i].length - 4)\r\n                        if(uShares.indexOf(uShares[i]) === i){\r\n                            let count = 0\r\n                            teams !== undefined && teams.map(t => {\r\n                                count++\r\n                                if(count < 63){\r\n                                    if(team === t.team){\r\n                                        holder = holder + t.lastSoldPrice\r\n                                    }\r\n                                } \r\n                            })\r\n                        }\r\n                    }\r\n                }\r\n            return (holder + user.cash).toFixed(2)\r\n        }\r\n        return 0\r\n    }\r\n\r\n    const getPercentReturn = () => {\r\n        return ((((getValue() - (user ? user.currentMoneyDeposited : 0)) / (user ? user.currentMoneyDeposited : 0)) * 100).toFixed(2))\r\n    }\r\n\r\n\r\n    return(\r\n        <div className='PTotal'>\r\n            <div className=\"p-total-account\">Account Value</div>\r\n            <hr className=\"p-total-hr\" />\r\n            <div className=\"p-total-value\">${getValue()}</div>\r\n            <div className=\"p-total-cash\">Cash: <span className=\"p-total-cash-amt\">${user && user.cash && user.cash.toFixed(2)}</span></div>\r\n            {user && user.code && user.tenure < 22 && user.bonusesReceived === 0 && <Bonus user={props.user} />}\r\n            <PPayouts user={props.user} teams={props.teams} />\r\n            <hr className=\"p-graph-top\" />\r\n            <div className={getPercentReturn() >=0 ? \"p-graph-return green\" : \"p-graph-return red\" }>${(getValue() - (user && user.currentMoneyDeposited)).toFixed(2)} [{getPercentReturn()>=0 && '+'}{getPercentReturn()}%] - All</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PTotal"]},"metadata":{},"sourceType":"module"}