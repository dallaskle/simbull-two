{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Dallas\\\\Desktop\\\\simbull-two\\\\src\\\\components\\\\Account\\\\PayPal\\\\ReactPayPal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\"; //import '../Acount.css'\n\nimport firebase from 'firebase';\nimport { db } from '../../../services/firebase';\nimport moment from 'moment';\nexport default function ReactPayPal(props) {\n  _s();\n\n  const user = props.user;\n  const [paid, setPaid] = React.useState(false);\n  const [error, setError] = React.useState(null);\n  const [minAmt, setMinAmt] = useState();\n  const paypalRef = React.useRef();\n  const [dbDeposit, setdbDeposit] = useState(false);\n  const [bonusAmt, setBonusAmt] = useState(0);\n  const [neededAmt, setNeededAmt] = useState(0);\n  const [promoTxt, setPromoTxt] = useState('');\n  let depositValue; // To show PayPal buttons once the component loads\n\n  React.useEffect(() => {\n    window.paypal.Buttons({\n      createOrder: (data, actions) => {\n        return actions.order.create({\n          intent: \"CAPTURE\",\n          purchase_units: [{\n            description: `SimBull Cash for user: ${user.email}`,\n            amount: {\n              currency_code: \"USD\",\n              value: props.amount\n            }\n          }]\n        });\n      },\n      onApprove: async (data, actions) => {\n        const order = await actions.order.capture();\n        setPaid(true);\n        console.log(order);\n      },\n      onError: err => {\n        //   setError(err),\n        console.error(err);\n      }\n    }).render(paypalRef.current);\n  }, []);\n  useEffect(() => {\n    if (props.promo !== undefined) {\n      db.collection('Affiliates').doc(props.promo ? props.promo : 'nothing').get(doc => {\n        if (doc.exists) {\n          const data = doc.data();\n          setBonusAmt(data.bonus);\n          setNeededAmt(data.needed);\n          setPromoTxt(data.bonusTxt);\n        }\n      });\n    }\n  }, [props.promo]); // If the payment has been made\n\n  if (paid) {\n    console.log(1);\n    let date = moment().format('MMMM Do YYYY, h:mm:ss a');\n\n    if (!dbDeposit) {\n      console.log(2);\n      setdbDeposit(true);\n      let amount = parseFloat(props.amount);\n      let pBonus = 0;\n\n      if (amount >= neededAmt && user.currentMoneyDeposited === 0) {\n        pBonus = bonusAmt;\n      }\n\n      let dBonus = 0;\n\n      if (props.promo.toLowerCase() === \"deposit10\" && user.currentMoneyDeposited === 0) {\n        pBonus = 10;\n      }\n\n      if (props.promo.toLowerCase() === \"deposit20\" && user.currentMoneyDeposited === 0) {\n        pBonus = 20;\n      }\n\n      if (amount >= 10) {\n        console.log(3);\n        db.collection('Deposits').doc(`${date}-${user.email}`).set({\n          user: user.email,\n          amount: amount,\n          date: date,\n          bonus: pBonus + dBonus,\n          type: 'deposit',\n          userCode: user.code ? user.code : null,\n          depositNum: user.currentMoneyDeposited === 0 ? 'first' : 'multiple'\n        });\n        db.collection('Users').doc(user.email).update({\n          cash: firebase.firestore.FieldValue.increment(amount + pBonus + dBonus),\n          currentMoneyDeposited: firebase.firestore.FieldValue.increment(amount),\n          totalValue: firebase.firestore.FieldValue.increment(amount + pBonus + dBonus),\n          bonusesReceived: firebase.firestore.FieldValue.increment(pBonus + dBonus)\n        }).then(result => {\n          alert(`Deposit Successful! The funds will appear in the portfolio after the page is refreshed.`);\n          return window.location.href = \"https://simbull.app\";\n        });\n      } else {\n        db.collection('Deposits').doc(`${date}-${user.email}`).set({\n          user: user.email,\n          amount: amount,\n          date: date,\n          bonus: pBonus,\n          type: 'deposit'\n        });\n        db.collection('Users').doc(user.email).update({\n          cash: firebase.firestore.FieldValue.increment(amount + pBonus),\n          currentMoneyDeposited: firebase.firestore.FieldValue.increment(amount + pBonus),\n          totalValue: firebase.firestore.FieldValue.increment(amount + pBonus)\n        }).then(result => {\n          alert(`Deposit Successful! The funds will appear in the portfolio after the page is refreshed.`);\n          return window.location.href = \"https://simbull.app\";\n        });\n      }\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Deposit Successful! The funds will appear in the portfolio after the page is refreshed.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 12\n    }, this);\n  } // If any error occurs\n\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Error Occurred in processing payment! Please try again.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 12\n    }, this);\n  } // Default Render\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Transfer-Paypal-Sheet\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Transfer-Paypal-Sheet-Div\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Transfer-Paypal-Sheet-Title\",\n        children: \"Deposit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Transfer-Paypal-Sheet-Amount-txt\",\n        children: \"Amount:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Transfer-Paypal-Sheet-Amount\",\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 71\n        }, this), \"$\", props.amount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 101\n      }, this), props.promo && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Transfer-Paypal-Sheet-Amount-txt\",\n          children: \"Promo:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 27\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Transfer-Paypal-Sheet-Amount\",\n          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 73\n          }, this), props.promo]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 27\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Transfer-Paypal-Sheet-Amount-txt\",\n          children: promoTxt\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 27\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Click the Payment Option You Prefer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: paypalRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 21\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ReactPayPal, \"LS55f/zGH2++O98bWnf9H2UJQlY=\");\n\n_c = ReactPayPal;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReactPayPal\");","map":{"version":3,"sources":["C:/Users/Dallas/Desktop/simbull-two/src/components/Account/PayPal/ReactPayPal.js"],"names":["React","useState","useEffect","firebase","db","moment","ReactPayPal","props","user","paid","setPaid","error","setError","minAmt","setMinAmt","paypalRef","useRef","dbDeposit","setdbDeposit","bonusAmt","setBonusAmt","neededAmt","setNeededAmt","promoTxt","setPromoTxt","depositValue","window","paypal","Buttons","createOrder","data","actions","order","create","intent","purchase_units","description","email","amount","currency_code","value","onApprove","capture","console","log","onError","err","render","current","promo","undefined","collection","doc","get","exists","bonus","needed","bonusTxt","date","format","parseFloat","pBonus","currentMoneyDeposited","dBonus","toLowerCase","set","type","userCode","code","depositNum","update","cash","firestore","FieldValue","increment","totalValue","bonusesReceived","then","result","alert","location","href"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n//import '../Acount.css'\r\nimport firebase from 'firebase'\r\nimport {db} from '../../../services/firebase'\r\nimport moment from 'moment'\r\n\r\nexport default function ReactPayPal(props) {\r\n  const user = props.user\r\n  const [paid, setPaid] = React.useState(false);\r\n  const [error, setError] = React.useState(null);\r\n  const [minAmt, setMinAmt] = useState()\r\n  const paypalRef = React.useRef();\r\n  const [dbDeposit, setdbDeposit] = useState(false)\r\n  const [bonusAmt, setBonusAmt] = useState(0)\r\n  const [neededAmt, setNeededAmt] = useState(0)\r\n  const [promoTxt, setPromoTxt] = useState('')\r\n\r\n  let depositValue \r\n\r\n   // To show PayPal buttons once the component loads\r\n   React.useEffect(() => {\r\n    window.paypal\r\n    .Buttons({\r\n      createOrder: (data, actions) => {\r\n          return actions.order.create({\r\n            intent: \"CAPTURE\",\r\n            purchase_units: [\r\n              {\r\n                description: `SimBull Cash for user: ${user.email}`,\r\n                amount: {\r\n                  currency_code: \"USD\",\r\n                  value: props.amount\r\n                }\r\n              }\r\n            ]\r\n          });\r\n      },\r\n      onApprove: async (data, actions) => {\r\n        const order = await actions.order.capture();\r\n        setPaid(true);\r\n        console.log(order);\r\n      },\r\n      onError: (err) => {\r\n        //   setError(err),\r\n        console.error(err);\r\n      }\r\n    })\r\n    .render(paypalRef.current);\r\n  \r\n  \r\n}, []);\r\n\r\n  useEffect(() => {\r\n    if(props.promo !== undefined){\r\n      db.collection('Affiliates').doc(props.promo ? props.promo : 'nothing').get(doc => {\r\n        if(doc.exists){\r\n          const data = doc.data()\r\n          setBonusAmt(data.bonus)\r\n          setNeededAmt(data.needed)\r\n          setPromoTxt(data.bonusTxt)\r\n        }\r\n      })\r\n    }\r\n  }, [props.promo])\r\n\r\n\r\n  // If the payment has been made\r\n  if (paid) {\r\n    console.log(1)\r\n    let date = moment().format('MMMM Do YYYY, h:mm:ss a')\r\n    if(!dbDeposit){\r\n      console.log(2)\r\n      setdbDeposit(true)\r\n      let amount = parseFloat(props.amount)\r\n      let pBonus = 0\r\n      if(amount >= neededAmt && user.currentMoneyDeposited === 0){pBonus = bonusAmt}\r\n      let dBonus = 0\r\n      if(props.promo.toLowerCase() === \"deposit10\" && user.currentMoneyDeposited === 0){pBonus = 10}\r\n      if(props.promo.toLowerCase() === \"deposit20\" && user.currentMoneyDeposited === 0){pBonus = 20}\r\n      if(amount >= 10){\r\n        console.log(3)\r\n        db.collection('Deposits').doc(`${date}-${user.email}`).set({\r\n          user: user.email,\r\n          amount: amount,\r\n          date: date,\r\n          bonus: pBonus + dBonus,\r\n          type: 'deposit',\r\n          userCode: user.code ? user.code : null,\r\n          depositNum: user.currentMoneyDeposited === 0 ? 'first' : 'multiple'\r\n        })\r\n        db.collection('Users').doc(user.email).update({\r\n          cash: firebase.firestore.FieldValue.increment(amount + pBonus + dBonus),\r\n          currentMoneyDeposited: firebase.firestore.FieldValue.increment(amount),\r\n          totalValue: firebase.firestore.FieldValue.increment(amount + pBonus + dBonus),\r\n          bonusesReceived: firebase.firestore.FieldValue.increment(pBonus + dBonus)\r\n        }).then((result) => {\r\n          alert(`Deposit Successful! The funds will appear in the portfolio after the page is refreshed.`)\r\n          return window.location.href = \"https://simbull.app\";\r\n        })\r\n      }else{ \r\n          db.collection('Deposits').doc(`${date}-${user.email}`).set({\r\n            user: user.email,\r\n            amount: amount,\r\n            date: date,\r\n            bonus: pBonus,\r\n            type: 'deposit'\r\n          })\r\n          db.collection('Users').doc(user.email).update({\r\n            cash: firebase.firestore.FieldValue.increment(amount + pBonus),\r\n            currentMoneyDeposited: firebase.firestore.FieldValue.increment(amount + pBonus),\r\n            totalValue: firebase.firestore.FieldValue.increment(amount + pBonus),\r\n          }).then((result) => {\r\n            alert(`Deposit Successful! The funds will appear in the portfolio after the page is refreshed.`)\r\n            return window.location.href = \"https://simbull.app\";\r\n          })\r\n        }  \r\n      \r\n    }\r\n    return <div>Deposit Successful! The funds will appear in the portfolio after the page is refreshed.</div>;\r\n  }\r\n\r\n  // If any error occurs\r\n  if (error) {\r\n    return <div>Error Occurred in processing payment! Please try again.</div>;\r\n  }\r\n\r\n  // Default Render\r\n  return (\r\n    <div className=\"Transfer-Paypal-Sheet\">\r\n                    <div className=\"Transfer-Paypal-Sheet-Div\">\r\n                      <div className=\"Transfer-Paypal-Sheet-Title\">Deposit</div>\r\n                        <div className=\"Transfer-Paypal-Sheet-Amount-txt\">\r\n                          Amount: \r\n                        </div>\r\n                        <div className=\"Transfer-Paypal-Sheet-Amount\"><br></br>${props.amount}</div><hr />\r\n                        {props.promo && <>\r\n                          <div className=\"Transfer-Paypal-Sheet-Amount-txt\">\r\n                            Promo: \r\n                          </div>\r\n                          <div className=\"Transfer-Paypal-Sheet-Amount\"><br></br>{props.promo}</div>\r\n                          <div className=\"Transfer-Paypal-Sheet-Amount-txt\">\r\n                            {promoTxt} \r\n                          </div>\r\n                          <hr />\r\n                        </>}\r\n                        <p>Click the Payment Option You Prefer</p>\r\n                        <div ref={paypalRef} />\r\n                    </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}