{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Dallas\\\\Desktop\\\\simbull-two\\\\src\\\\components\\\\Holdings\\\\OpenBids.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './Holdings.css';\nimport { Link } from 'react-router-dom';\nimport { db } from '../../services/firebase';\nimport firebase from 'firebase';\n\nconst OpenBids = props => {\n  _s();\n\n  //props\n  const user = props.user; //states\n\n  const [myBids, setMyBids] = useState([]);\n  const [bidsLoaded, setBidsLoaded] = useState(false);\n  const [myBidsInd, setMyBidsInd] = useState([]);\n  const [updateTeamDb, setUpdateTeamDb] = useState(false);\n  const [show, setShow] = useState(false); //Funcitonality\n\n  const getMyBids = async () => {\n    if (show) {\n      if (user !== 0) {\n        const myBids1 = [];\n        const myBids2 = [];\n        const myBidTeams = [];\n        await db.collection('Bids').where('bidOwner', '==', user.email).get().then(snapshot => {\n          snapshot.forEach(doc => {\n            const data = doc.data();\n            myBids1.push(data);\n\n            if (!myBidTeams.includes(data.bidTeam)) {\n              myBidTeams.push(data.bidTeam);\n            }\n          });\n          myBidTeams.map(x => {\n            let thisTeam;\n            let thisBidPrice = 0;\n            let thisBidNumOfShares = 0;\n            let last = 0;\n            myBids1.map(a => {\n              if (a.bidTeam == x) {\n                thisTeam = a.bidTeam;\n                thisBidPrice = thisBidPrice + a.bidPrice;\n                thisBidNumOfShares++;\n              }\n\n              last++;\n\n              if (last == myBids1.length) {\n                myBids2.push({\n                  bidTeam: thisTeam,\n                  bidPrice: thisBidPrice / thisBidNumOfShares,\n                  bidNumOfShares: thisBidNumOfShares\n                });\n              }\n            });\n          });\n          setMyBids(myBids2);\n          setMyBidsInd(myBids1);\n        });\n        setBidsLoaded(true);\n      }\n    }\n  };\n\n  useEffect(() => {\n    getMyBids();\n  }, [show]);\n\n  const showBids = () => {\n    function deleteBid(l) {\n      var batch = db.batch();\n      myBidsInd.map(x => {\n        if (l.bidTeam == x.bidTeam) {\n          let thisRef1 = db.collection('Bids').doc(`${x.bidTeam}-${x.bidOwner}-$${x.bidPrice}-${x.bidNum}`);\n          batch.delete(thisRef1);\n          let thisRef2 = db.collection('Teams').doc(l.bidTeam);\n          batch.update(thisRef2, {\n            totalBidPrice: firebase.firestore.FieldValue.increment(-x.bidPrice),\n            bidsAvailable: firebase.firestore.FieldValue.increment(-1)\n          });\n        }\n      });\n      batch.commit().then(() => {\n        alert('Deleted!');\n      }).catch(error => console.log(error));\n      alert(`You are deleting your bids for ${l.bidTeam}. `);\n      setMyBids(myBids.filter(x => {\n        return x.bidTeam != l.bidTeam;\n      }));\n    }\n\n    return myBids.map(l => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"holdings-offers-team-div\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"holdings-offers-team-name\",\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"offers-blue-bid\",\n            children: \"Bid\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 65\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"tc-name-sim\",\n            children: \"sim\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 109\n          }, this), l.bidTeam]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"holdings-offers-team-right\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"holdings-offers-team-info\",\n            children: `${l.bidNumOfShares} x $${l.bidPrice.toFixed(2)}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"holdings-offers-team-btn\",\n            onClick: () => {\n              deleteBid(l);\n            },\n            children: \"cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this)]\n      }, l.bidTeam, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 16\n      }, this);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"OpenBids\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"holdings-offers-div\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        onClick: () => {\n          setShow(!show);\n        },\n        children: [bidsLoaded ? '' : 'Open', \" Offers to Buy\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 50\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this), bidsLoaded && showBids(), myBids.length == 0 && show && /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"Portfolio-Team-Name\",\n      children: \"You have no current offers to buy\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 44\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 9\n  }, this);\n};\n\n_s(OpenBids, \"0crOoqZsntqFA+g6iOfKbV7mjyc=\");\n\n_c = OpenBids;\nexport default OpenBids;\n\nvar _c;\n\n$RefreshReg$(_c, \"OpenBids\");","map":{"version":3,"sources":["C:/Users/Dallas/Desktop/simbull-two/src/components/Holdings/OpenBids.js"],"names":["React","useState","useEffect","Link","db","firebase","OpenBids","props","user","myBids","setMyBids","bidsLoaded","setBidsLoaded","myBidsInd","setMyBidsInd","updateTeamDb","setUpdateTeamDb","show","setShow","getMyBids","myBids1","myBids2","myBidTeams","collection","where","email","get","then","snapshot","forEach","doc","data","push","includes","bidTeam","map","x","thisTeam","thisBidPrice","thisBidNumOfShares","last","a","bidPrice","length","bidNumOfShares","showBids","deleteBid","l","batch","thisRef1","bidOwner","bidNum","delete","thisRef2","update","totalBidPrice","firestore","FieldValue","increment","bidsAvailable","commit","alert","catch","error","console","log","filter","toFixed"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAO,gBAAP;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,SAAQC,EAAR,QAAiB,yBAAjB;AACA,OAAOC,QAAP,MAAqB,UAArB;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AACxB;AACA,QAAMC,IAAI,GAAGD,KAAK,CAACC,IAAnB,CAFwB,CAIxB;;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACU,UAAD,EAAaC,aAAb,IAA8BX,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAACY,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACc,YAAD,EAAeC,eAAf,IAAkCf,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAM,CAACgB,IAAD,EAAOC,OAAP,IAAkBjB,QAAQ,CAAC,KAAD,CAAhC,CATwB,CAWxB;;AACA,QAAMkB,SAAS,GAAG,YAAY;AAC1B,QAAGF,IAAH,EAAS;AACL,UAAGT,IAAI,KAAK,CAAZ,EAAc;AACV,cAAMY,OAAO,GAAG,EAAhB;AACA,cAAMC,OAAO,GAAG,EAAhB;AACA,cAAMC,UAAU,GAAG,EAAnB;AACA,cAAMlB,EAAE,CAACmB,UAAH,CAAc,MAAd,EAAsBC,KAAtB,CAA4B,UAA5B,EAAwC,IAAxC,EAA8ChB,IAAI,CAACiB,KAAnD,EAA0DC,GAA1D,GAAgEC,IAAhE,CAAsEC,QAAD,IAAc;AACrFA,UAAAA,QAAQ,CAACC,OAAT,CAAkBC,GAAD,IAAS;AACtB,kBAAMC,IAAI,GAAGD,GAAG,CAACC,IAAJ,EAAb;AACAX,YAAAA,OAAO,CAACY,IAAR,CAAaD,IAAb;;AACA,gBAAG,CAACT,UAAU,CAACW,QAAX,CAAoBF,IAAI,CAACG,OAAzB,CAAJ,EAAsC;AAClCZ,cAAAA,UAAU,CAACU,IAAX,CAAgBD,IAAI,CAACG,OAArB;AACH;AACJ,WAND;AAOAZ,UAAAA,UAAU,CAACa,GAAX,CAAeC,CAAC,IAAG;AACf,gBAAIC,QAAJ;AACA,gBAAIC,YAAY,GAAG,CAAnB;AACA,gBAAIC,kBAAkB,GAAG,CAAzB;AACA,gBAAIC,IAAI,GAAG,CAAX;AACApB,YAAAA,OAAO,CAACe,GAAR,CAAYM,CAAC,IAAI;AACb,kBAAGA,CAAC,CAACP,OAAF,IAAaE,CAAhB,EAAkB;AACdC,gBAAAA,QAAQ,GAAGI,CAAC,CAACP,OAAb;AACAI,gBAAAA,YAAY,GAAGA,YAAY,GAAGG,CAAC,CAACC,QAAhC;AACAH,gBAAAA,kBAAkB;AACrB;;AACDC,cAAAA,IAAI;;AACJ,kBAAGA,IAAI,IAAIpB,OAAO,CAACuB,MAAnB,EAA0B;AACtBtB,gBAAAA,OAAO,CAACW,IAAR,CAAa;AACTE,kBAAAA,OAAO,EAAEG,QADA;AAETK,kBAAAA,QAAQ,EAAEJ,YAAY,GAACC,kBAFd;AAGTK,kBAAAA,cAAc,EAAEL;AAHP,iBAAb;AAKH;AACJ,aAdD;AAeH,WApBD;AAqBA7B,UAAAA,SAAS,CAACW,OAAD,CAAT;AACAP,UAAAA,YAAY,CAACM,OAAD,CAAZ;AACH,SA/BK,CAAN;AAgCAR,QAAAA,aAAa,CAAC,IAAD,CAAb;AACH;AACJ;AACJ,GAzCD;;AA0CAV,EAAAA,SAAS,CAAC,MAAM;AACZiB,IAAAA,SAAS;AACZ,GAFQ,EAEN,CAACF,IAAD,CAFM,CAAT;;AAIA,QAAM4B,QAAQ,GAAG,MAAM;AACnB,aAASC,SAAT,CAAmBC,CAAnB,EAAsB;AACnB,UAAIC,KAAK,GAAG5C,EAAE,CAAC4C,KAAH,EAAZ;AACAnC,MAAAA,SAAS,CAACsB,GAAV,CAAeC,CAAC,IAAI;AAChB,YAAGW,CAAC,CAACb,OAAF,IAAaE,CAAC,CAACF,OAAlB,EAA0B;AACtB,cAAIe,QAAQ,GAAG7C,EAAE,CAACmB,UAAH,CAAc,MAAd,EAAsBO,GAAtB,CAA2B,GAAEM,CAAC,CAACF,OAAQ,IAAGE,CAAC,CAACc,QAAS,KAAId,CAAC,CAACM,QAAS,IAAGN,CAAC,CAACe,MAAO,EAAhF,CAAf;AACAH,UAAAA,KAAK,CAACI,MAAN,CAAaH,QAAb;AACA,cAAII,QAAQ,GAAGjD,EAAE,CAACmB,UAAH,CAAc,OAAd,EAAuBO,GAAvB,CAA2BiB,CAAC,CAACb,OAA7B,CAAf;AACAc,UAAAA,KAAK,CAACM,MAAN,CAAaD,QAAb,EAAuB;AACnBE,YAAAA,aAAa,EAAElD,QAAQ,CAACmD,SAAT,CAAmBC,UAAnB,CAA8BC,SAA9B,CAAwC,CAACtB,CAAC,CAACM,QAA3C,CADI;AAEnBiB,YAAAA,aAAa,EAAEtD,QAAQ,CAACmD,SAAT,CAAmBC,UAAnB,CAA8BC,SAA9B,CAAwC,CAAC,CAAzC;AAFI,WAAvB;AAIH;AACJ,OAVD;AAWAV,MAAAA,KAAK,CAACY,MAAN,GAAejC,IAAf,CAAoB,MAAM;AAACkC,QAAAA,KAAK,CAAC,UAAD,CAAL;AAAkB,OAA7C,EAA+CC,KAA/C,CAAsDC,KAAD,IAAWC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAAhE;AACAF,MAAAA,KAAK,CAAE,kCAAiCd,CAAC,CAACb,OAAQ,IAA7C,CAAL;AACAxB,MAAAA,SAAS,CAACD,MAAM,CAACyD,MAAP,CAAc9B,CAAC,IAAI;AAAC,eAAOA,CAAC,CAACF,OAAF,IAAaa,CAAC,CAACb,OAAtB;AAA+B,OAAnD,CAAD,CAAT;AACH;;AACD,WACAzB,MAAM,CAAC0B,GAAP,CAAWY,CAAC,IAAI;AACZ,0BACI;AAAK,QAAA,SAAS,EAAC,0BAAf;AAAA,gCACK;AAAK,UAAA,SAAS,EAAC,2BAAf;AAAA,uCAA4C;AAAM,YAAA,SAAS,EAAC,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAA5C,eAAwF;AAAM,YAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAxF,EAAiIA,CAAC,CAACb,OAAnI;AAAA;AAAA;AAAA;AAAA;AAAA,gBADL,eAEK;AAAK,UAAA,SAAS,EAAC,4BAAf;AAAA,kCACI;AAAM,YAAA,SAAS,EAAC,2BAAhB;AAAA,sBAA8C,GAAEa,CAAC,CAACH,cAAe,OAAMG,CAAC,CAACL,QAAF,CAAWyB,OAAX,CAAmB,CAAnB,CAAsB;AAA7F;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAQ,YAAA,SAAS,EAAC,0BAAlB;AAA6C,YAAA,OAAO,EAAE,MAAI;AAACrB,cAAAA,SAAS,CAACC,CAAD,CAAT;AAAa,aAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFL;AAAA,SAA+CA,CAAC,CAACb,OAAjD;AAAA;AAAA;AAAA;AAAA,cADJ;AAUH,KAXD,CADA;AAcF,GAhCD;;AAkCA,sBACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA,6BAAqC,QAAC,IAAD;AAAM,QAAA,OAAO,EAAE,MAAI;AAAChB,UAAAA,OAAO,CAAC,CAACD,IAAF,CAAP;AAAe,SAAnC;AAAA,mBAAsCN,UAAU,GAAG,EAAH,GAAQ,MAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAArC;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKA,UAAU,IAAIkC,QAAQ,EAF3B,EAGKpC,MAAM,CAACkC,MAAP,IAAiB,CAAjB,IAAsB1B,IAAtB,iBAA8B;AAAM,MAAA,SAAS,EAAC,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHnC;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CAnGD;;GAAMX,Q;;KAAAA,Q;AAqGN,eAAeA,QAAf","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport './Holdings.css'\r\nimport {Link} from 'react-router-dom'\r\nimport {db} from '../../services/firebase'\r\nimport firebase from 'firebase'\r\n\r\nconst OpenBids = (props) => {\r\n    //props\r\n    const user = props.user\r\n\r\n    //states\r\n    const [myBids, setMyBids] = useState([])\r\n    const [bidsLoaded, setBidsLoaded] = useState(false)\r\n    const [myBidsInd, setMyBidsInd] = useState([])\r\n    const [updateTeamDb, setUpdateTeamDb] = useState(false)\r\n    const [show, setShow] = useState(false)\r\n\r\n    //Funcitonality\r\n    const getMyBids = async () => {\r\n        if(show) {\r\n            if(user !== 0){\r\n                const myBids1 = []\r\n                const myBids2 = []\r\n                const myBidTeams = []\r\n                await db.collection('Bids').where('bidOwner', '==', user.email).get().then((snapshot) => {\r\n                    snapshot.forEach((doc) => {\r\n                        const data = doc.data()\r\n                        myBids1.push(data)\r\n                        if(!myBidTeams.includes(data.bidTeam)){\r\n                            myBidTeams.push(data.bidTeam)\r\n                        }\r\n                    })\r\n                    myBidTeams.map(x=> {\r\n                        let thisTeam \r\n                        let thisBidPrice = 0\r\n                        let thisBidNumOfShares = 0\r\n                        let last = 0\r\n                        myBids1.map(a => {\r\n                            if(a.bidTeam == x){\r\n                                thisTeam = a.bidTeam\r\n                                thisBidPrice = thisBidPrice + a.bidPrice\r\n                                thisBidNumOfShares++\r\n                            }\r\n                            last++\r\n                            if(last == myBids1.length){\r\n                                myBids2.push({\r\n                                    bidTeam: thisTeam,\r\n                                    bidPrice: thisBidPrice/thisBidNumOfShares,\r\n                                    bidNumOfShares: thisBidNumOfShares,\r\n                                }) \r\n                            }\r\n                        })\r\n                    })\r\n                    setMyBids(myBids2)\r\n                    setMyBidsInd(myBids1)\r\n                })\r\n                setBidsLoaded(true)\r\n            }\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        getMyBids()\r\n    }, [show])\r\n\r\n    const showBids = () => {\r\n        function deleteBid(l) {\r\n           var batch = db.batch()\r\n           myBidsInd.map( x => {\r\n               if(l.bidTeam == x.bidTeam){\r\n                   let thisRef1 = db.collection('Bids').doc(`${x.bidTeam}-${x.bidOwner}-$${x.bidPrice}-${x.bidNum}`)\r\n                   batch.delete(thisRef1)\r\n                   let thisRef2 = db.collection('Teams').doc(l.bidTeam)\r\n                   batch.update(thisRef2, {\r\n                       totalBidPrice: firebase.firestore.FieldValue.increment(-x.bidPrice),\r\n                       bidsAvailable: firebase.firestore.FieldValue.increment(-1),\r\n                   })\r\n               }\r\n           })\r\n           batch.commit().then(() => {alert('Deleted!')}).catch((error) => console.log(error));\r\n           alert(`You are deleting your bids for ${l.bidTeam}. `)\r\n           setMyBids(myBids.filter(x => {return(x.bidTeam != l.bidTeam)}))\r\n       }\r\n       return(\r\n       myBids.map(l => {\r\n           return(\r\n               <div className=\"holdings-offers-team-div\" key={l.bidTeam}>\r\n                    <div className=\"holdings-offers-team-name\"> <span className='offers-blue-bid'>Bid</span><span className=\"tc-name-sim\">sim</span>{l.bidTeam}</div>\r\n                    <div className=\"holdings-offers-team-right\">\r\n                        <span className=\"holdings-offers-team-info\">{`${l.bidNumOfShares} x $${l.bidPrice.toFixed(2)}`}</span> \r\n                        <button className=\"holdings-offers-team-btn\" onClick={()=>{deleteBid(l)}}>cancel</button>\r\n                    </div>\r\n                       \r\n               </div>\r\n           )\r\n       })\r\n       )\r\n    }\r\n\r\n    return(\r\n        <div className=\"OpenBids\">\r\n            <div className=\"holdings-offers-div\"><Link onClick={()=>{setShow(!show)}}>{bidsLoaded ? '' : 'Open'} Offers to Buy</Link></div>\r\n            {bidsLoaded && showBids()}\r\n            {myBids.length == 0 && show && <span className=\"Portfolio-Team-Name\">You have no current offers to buy</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OpenBids"]},"metadata":{},"sourceType":"module"}